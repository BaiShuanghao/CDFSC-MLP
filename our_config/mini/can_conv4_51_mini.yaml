includes:
- headers/data.yaml
- headers/device.yaml
- headers/misc.yaml
- headers/model.yaml
- headers/optimizer.yaml
- classifiers/CAN.yaml
- backbones/Conv64F.yaml
#! device
device_ids: 1
n_gpu: 1
seed: 0
deterministic: true
#! basic
batch_size: 128
episode_size: 4
epoch: 100
test_epoch: 5
train_episode: 2000
test_episode: 600
shot_num: 1
way_num: 5
query_num: 15
test_shot: 1
test_way: 5
test_query: 15
image_size: 84
#! data
use_memory: false
augment: true
augment_times: 1
augment_times_query: 1
data_root: 
  train: /opt/data/private/FSL_data/miniImageNet--ravi
  val: /opt/data/private/FSL_data/miniImageNet--ravi
  test: /opt/data/private/FSL_data/miniImageNet--ravi
#! optimizer
lr_scheduler:
  kwargs:
    T_max: 100
    eta_min: 0
  name: CosineAnnealingLR
optimizer:
  kwargs:
    lr: 0.1
    momentum: 0.9
    nesterov: true
    weight_decay: 0.0005
  name: SGD
  other: null
#! backbone
backbone:
  kwargs:
    is_feature: false
    is_flatten: false
    last_pool: true
    leaky_relu: true
    negative_slope: 0.2
  name: Conv64F
#! MLP layer
mlp_layer:
  kwargs: 
    in_dim: 1600
    hidden_dim: 1600
    out_dim: 1600
  name: Two_MLP_layer
  use: true
#! classifier
classifier:
  kwargs:
    HW: 5
    nFeat: 64
    num_class: 64
    scale_cls: 7
  name: CAN
#! result
result_root: ./results
#! other
log_test: false
val_per_epoch: 1
log_interval: 100
log_level: info
log_name: null
log_paramerter: false
pretrain_path: ~
resume: false
tb_scale: 3.3333333333333335
tag: null
resume_path: ~
save_interval: 10
save_part:
  - emb_func  
parallel_part:
  - emb_func




